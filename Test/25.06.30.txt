GPIO 인터럽트와 함께 debounce 처리를 하면서, 하드웨어와 소프트웨어 간의 역할 분리에 대해 고민하게 됌.
기계적 진동(multiple edges)을 software debounce로 해결했지만, 인터럽트 핸들러 안에서 처리하면 latency가 증가하고, 시스템 안정성에 영향을 줄 수 있음.
결국 debounce는 인터럽트 context 바깥에서 타이머 기반으로 처리하도록 변경. 이 과정에서 RTOS의 soft timer 활용이 꽤 유용함.
단순히 기능 구현을 넘어서, 인터럽트와 동기화, 작업 분리, 우선순위 관리가 중요하다는 걸 다시 실감함...